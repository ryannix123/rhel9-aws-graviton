---
- name: Final cleanup of AWS resources
  hosts: localhost
  gather_facts: false
  vars:
    aws_region: "us-east-2"
    vpc_name: "rhel9-vpc"
  
  tasks:
    - name: Get the VPC ID from the VPC name
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ vpc_name }}"
      register: vpc_info
      ignore_errors: true

    - name: Set VPC ID fact
      set_fact:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
      when: vpc_info.vpcs is defined and vpc_info.vpcs | length > 0

    - name: Display VPC information
      debug:
        var: vpc_id
      when: vpc_id is defined

    - name: Get Route Table information
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc_id | default('') }}"
      register: route_table_info
      ignore_errors: true
      when: vpc_id is defined

    - name: Disassociate Route Tables
      amazon.aws.ec2_vpc_route_table:
        region: "{{ aws_region }}"
        route_table_id: "{{ item.id }}"
        lookup: id
        subnets: []
      with_items: "{{ route_table_info.route_tables | default([]) }}"
      ignore_errors: true
      when: 
        - route_table_info.route_tables is defined
        - item.associations is defined and item.associations | length > 0 and item.associations[0].main != true

    - name: Delete non-main Route Tables
      amazon.aws.ec2_vpc_route_table:
        region: "{{ aws_region }}"
        route_table_id: "{{ item.id }}"
        state: absent
        lookup: id
      with_items: "{{ route_table_info.route_tables | default([]) }}"
      ignore_errors: true
      when: 
        - route_table_info.route_tables is defined
        - item.associations is not defined or item.associations | length == 0 or (item.associations[0].main is defined and not item.associations[0].main)

    - name: Get remaining Route Tables
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc_id | default('') }}"
      register: remaining_route_tables
      ignore_errors: true
      when: vpc_id is defined

    - name: Display remaining Route Tables
      debug:
        var: remaining_route_tables
      when: remaining_route_tables is defined

    - name: Check if any Network Interfaces are attached to the VPC
      amazon.aws.ec2_eni_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc_id | default('') }}"
      register: eni_info
      ignore_errors: true
      when: vpc_id is defined

    - name: Display Network Interface information
      debug:
        var: eni_info
      when: eni_info is defined

    - name: Delete Network Interfaces
      amazon.aws.ec2_eni:
        region: "{{ aws_region }}"
        eni_id: "{{ item.id }}"
        state: absent
        force_detach: yes
      with_items: "{{ eni_info.network_interfaces | default([]) }}"
      ignore_errors: true
      when: eni_info.network_interfaces is defined

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc_id | default('') }}"
        state: absent
      ignore_errors: true
      when: vpc_id is defined

    - name: Verify final cleanup status
      debug:
        msg: "Cleanup completed. Please verify in the AWS console that all resources have been removed."